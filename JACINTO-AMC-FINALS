import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  Image,
  TouchableOpacity,
  TextInput,
  Alert,
  SafeAreaView,
} from 'react-native';
import { WebView } from 'react-native-webview';

const moods = [
  { title: 'HAPPY', image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ5qOzVPo3zjjhaQNtV7bOUaUW3O_b1fgDnTw&s' },
  { title: 'RELAXING', image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjoXxDtPY1fRMQ1y-SJjyZb-b9nOY521SMog&s' },
  { title: 'DREAMY', image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPOVp7XV3mfhqddfbXKNEZMa2O3u_LTVVCXw&s' },
  { title: 'PUMPED UP', image: 'https://img.freepik.com/free-photo/man-silhouette-angrily-screaming-shadow-back-lit-white-background_140725-161505.jpg?semt=ais_hybrid&w=740' },
  { title: 'SAD', image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3TW6mLqATiReOEaMwwlgJIS5dc_XlpFikkQ&s' },
  { title: 'SEXY', image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRztRLhJO9JT3_kYGCTvCZV0uH1a_AzMWpg8A&s' },
  { title: 'FOCUSED', image: 'https://www.thoughtco.com/thmb/GaiuduCRVyxn3qWpJ5yWin2LfdU=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/GettyImages-518845884-58d2d9625f9b584683f323ce.jpg' },
  { title: 'ANGRY', image: 'https://images.squarespace-cdn.com/content/v1/589b12468419c22a6dc74e65/1558341618782-7FJAPQ2YR2NRC5U2VP9J/image-asset.jpeg' },
  { title: 'IN LOVE', image: 'https://www.hcbh.org/media/giyfs1eb/falling-in-love.png' },
  { title: 'NOSTALGIC', image: 'https://www.brainsway.com/wp-content/uploads/2023/05/Nostalgic-Depression.jpg' },
];

const moodTracks = {
 HAPPY: [
    { title: "Happy – Pharrell Williams", embed: "https://open.spotify.com/embed/track/60nZcImufyMA1MKQY3dcCH" },
    { title: "Good as Hell – Lizzo", embed: "https://open.spotify.com/embed/track/0k664IuFwVP557Gnx7RhIl" },
    { title: "Can't Stop The Feeling – JT", embed: "https://open.spotify.com/embed/track/6JV2JOEocMgcZxYSZelKcc" },
    { title: "Walking on Sunshine", embed: "https://open.spotify.com/embed/track/3DQVGC1MFT3FGM3ZLbm1Nf" },
    { title: "Uptown Funk – Bruno Mars", embed: "https://open.spotify.com/embed/track/32OlwWuMpZ6b0aN2RZOeMS" },
  ],
  RELAXING: [
  { title: "Electra – Airstream", embed: "https://open.spotify.com/embed/track/2ZsWcZ2Zq3c5vZzZzZzZzZ" },
  { title: "Clair de Lune – Claude Debussy", embed: "https://open.spotify.com/embed/track/3zBhihYUHBmGd2bcQIobrF" },
  { title: "Holocene – Bon Iver", embed: "https://open.spotify.com/embed/track/0bYg9bo50gSsH3LtXe2SQn" },
  { title: "Pure Shores – All Saints", embed: "https://open.spotify.com/embed/track/1cTZMwcBJT0Ka3UJPXOeeN" },
  { title: "Someone Like You – Adele", embed: "https://open.spotify.com/embed/track/4kflIGfjdZJW4ot2ioixTB" },
],
  DREAMY: [
    { title: "I'll Be Missing You", embed: "https://open.spotify.com/embed/track/7H6ev70Weq6DdpZyyTmUXk" },
    { title: "Cold Little Heart", embed: "https://open.spotify.com/embed/track/3n3Ppam7vgaVa1iaRUc9Lp" },
    { title: "Where Is My Mind", embed: "https://open.spotify.com/embed/track/2VxeLyX666F8uXCJ0dZF8B" },
    { title: "Apocalypse - Cigarettes After Sex", embed: "https://open.spotify.com/embed/track/3AVrVz5rK8Hrqo9YGiVGN5" },
    { title: "In The Air Tonight", embed: "https://open.spotify.com/embed/track/18AXbzPzBS8Y3AkgSxzJPb" },
  ],
  PUMPED_UP: [
    { title: "Eye of the Tiger – Survivor", embed: "https://open.spotify.com/embed/track/2KH16WveTQWT6KOG9Rg6e2" },
    { title: "Power – Kanye West", embed: "https://open.spotify.com/embed/track/5nNmj1cLH3r4aA4XDJ2bgY" },
    { title: "Lose Yourself – Eminem", embed: "https://open.spotify.com/embed/track/1bSpwPhAxZwlR2enJJsv7U" },
    { title: "Stronger – Kanye West", embed: "https://open.spotify.com/embed/track/2p0zSBtgJwZTbzTn0nZ2xW" },
    { title: "Till I Collapse – Eminem", embed: "https://open.spotify.com/embed/track/0f8sVY8nloH4Cim5xYQX2n" },
  ],
SAD: [
    { title: "Someone Like You – Adele", embed: "https://open.spotify.com/embed/track/4kflIGfjdZJW4ot2ioixTB" },
    { title: "Let Her Go – Passenger", embed: "https://open.spotify.com/embed/track/4Y1fTcf3dYJiRz6C3nYhWW" },
    { title: "When I Was Your Man – Bruno Mars", embed: "https://open.spotify.com/embed/track/0y60itmpH0aPKsFiGxmtnh" },
    { title: "Fix You – Coldplay", embed: "https://open.spotify.com/embed/track/6KuQTIu1KoTTkLXKrwlLPV" },
    { title: "The Night We Met – Lord Huron", embed: "https://open.spotify.com/embed/track/2u8XzYh6VhXdiK8vL7zRbq" },
  ],
SEXY: [
    { title: "Call Out My Name – The Weeknd", embed: "https://open.spotify.com/embed/track/2XU0oxnq2qxCpomAAuJY8K" },
    { title: "Redbone – Childish Gambino", embed: "https://open.spotify.com/embed/track/3UmaczJpikHgJFyBTAJVoz" },
    { title: "Earned It (Fifty Shades of Grey) – The Weeknd", embed: "https://open.spotify.com/embed/track/1cQ3LIkZE68pMSnPhZWXLu" },
    { title: "Lotus Flower – Radiohead", embed: "https://open.spotify.com/embed/track/6G8kHiVZlDPOmcUUMqGgGj" },
    { title: "Adorn – Miguel", embed: "https://open.spotify.com/embed/track/0FnbfN1X2o7Yqf4Hl5w0iJ" },
  ],
FOCUSED: [
  { title: "Weightless – Marconi Union", embed: "https://open.spotify.com/embed/track/6kkwzB6hXLIONkEk9JciA6" },
  { title: "Night Owl – Galimatias", embed: "https://open.spotify.com/embed/track/4xsum9mtqZB1pUuhw6wCQo" },
  { title: "Kusanagi – Oatmello", embed: "https://open.spotify.com/embed/track/5APkeOxFMV3oEo2pR9tgS0" },
  { title: "Luv(sic) Part 3 – Nujabes", embed: "https://open.spotify.com/embed/track/4xlpJ99yL9xYQtzG6c3hwk" },
  { title: "Drift – Nosaj Thing", embed: "https://open.spotify.com/embed/track/2uOpFzvNQqFAWh8lZxosX0" },

],
ANGRY: [
  { title: "Psychosocial – Slipknot", embed: "https://open.spotify.com/embed/track/2MvIMgtWyK88OiPi0J8Dg3" },
  { title: "Chop Suey! – System Of A Down", embed: "https://open.spotify.com/embed/track/7kwiwQhWRBSP1PJv4ZFJUK" },
  { title: "Down with the Sickness – Disturbed", embed: "https://open.spotify.com/embed/track/79qOmULc1p6IP1do5kgwg7" },
  { title: "Bodies – Drowning Pool", embed: "https://open.spotify.com/embed/track/3xktQXIr1OD3ENc19viwDP" },
  { title: "Freak on a Leash – Korn", embed: "https://open.spotify.com/embed/track/7B9S4RiRczdw1B9ddjpFe8" },
],
IN_LOVE: [
  { title: "Perfect – Ed Sheeran", embed: "https://open.spotify.com/embed/track/0tgVpDi06FyKpA1z0VMD4v" },
  { title: "All of Me – John Legend", embed: "https://open.spotify.com/embed/track/3U4isOIWM3VvDubwSI3y7a" },
  { title: "Thinking Out Loud – Ed Sheeran", embed: "https://open.spotify.com/embed/track/34gCuhDGsG4bRPIf9bb02f" },
  { title: "Just the Way You Are – Bruno Mars", embed: "https://open.spotify.com/embed/track/7BqBn9nzAq8spo5e7cZ0dJ" },
  { title: "Adore You – Harry Styles", embed: "https://open.spotify.com/embed/track/3jjujdWJ72nww5eGnfs2E7" },
],
NOSTALGIC: [
  { title: "Bohemian Rhapsody – Queen", embed: "https://open.spotify.com/embed/track/7tFiyTwD0nx5a1eklYtX2J" },
  { title: "Take On Me – a-ha", embed: "https://open.spotify.com/embed/track/2WfaOiMkCvy7F5fcp2zZ8L" },
  { title: "Africa – Toto", embed: "https://open.spotify.com/embed/track/2374M0fQpWi3dLnB54qaLX" },
  { title: "Smells Like Teen Spirit – Nirvana", embed: "https://open.spotify.com/embed/track/5ghIJDpPoe3CfHMGu71E6T" },
  { title: "Every Breath You Take – The Police", embed: "https://open.spotify.com/embed/track/5Z01UMMf7V1o0MzF86s6WJ" },
],
};
const isPasswordStrong = (password) => {
  const strongRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{6,}$/;
  return strongRegex.test(password);
};

const App = () => {
  const [selectedMood, setSelectedMood] = useState(null);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [isSignup, setIsSignup] = useState(false);
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [chatInput, setChatInput] = useState('');
  const [chatMessages, setChatMessages] = useState([]);
  const [menuOpen, setMenuOpen] = useState(false);

  const generateAIResponse = (input) => {
    const text = input.toLowerCase();
    if (text.includes('recommend')) {
      return "Based on your mood, I'd suggest listening to the top tracks in the playlist above. Want me to play one for you?";
    }
    if (text.includes('artist')) {
      return "I love a variety of artists! Who's your favorite?";
    }
    if (text.includes('happy')) {
      return "Happy vibes! How about some Pharrell Williams or Lizzo?";
    }
    if (text.includes('relax')) {
      return "Relaxing tunes coming right up. Try some Claude Debussy or Bon Iver.";
    }
    if (text.includes('dream')) {
      return "Dreamy sounds are perfect for focus and creativity.";
    }
    return "That's interesting! Tell me more about what music you like.";
  };

  const handleAuth = () => {
    if (!email || !password) {
      Alert.alert('Error', 'Please fill in all fields');
      return;
    }

    if (!isPasswordStrong(password)) {
      Alert.alert(
        'Weak Password',
        'Password must have uppercase, lowercase, number, special char and be at least 6 characters long'
      );
      return;
    }

    setIsAuthenticated(true);
    setEmail('');
    setPassword('');
  };

  const handleSendChat = () => {
    if (!chatInput.trim()) return;

    const userMessage = { sender: 'user', text: chatInput };
    const botMessage = { sender: 'bot', text: generateAIResponse(chatInput) };

    setChatMessages((msgs) => [...msgs, userMessage, botMessage]);
    setChatInput('');
  };

  const handleSelectMood = (mood) => {
    setSelectedMood(mood);
    setChatMessages([]);
  };

  const handleLogout = () => {
    setIsAuthenticated(false);
    setSelectedMood(null);
    setChatMessages([]);
    setMenuOpen(false);
  };

  if (!isAuthenticated) {
    return (
      <View style={styles.loginContainer}>
        <Text style={styles.appTitle}>Groove Tunes</Text>
        <View style={styles.loginForm}>
          <Text style={styles.title}>{isSignup ? 'Sign Up' : 'Login'}</Text>
          <TextInput
            style={styles.input}
            placeholder="Email"
            keyboardType="email-address"
            autoCapitalize="none"
            value={email}
            onChangeText={setEmail}
            placeholderTextColor="#999"
          />
          <View style={styles.passwordContainer}>
            <TextInput
              style={[styles.input, { flex: 1 }]}
              placeholder="Password"
              secureTextEntry={!showPassword}
              value={password}
              onChangeText={setPassword}
              placeholderTextColor="#999"
            />
            <TouchableOpacity
              onPress={() => setShowPassword((prev) => !prev)}
              style={styles.showPasswordButton}
            >
              <Text style={{ color: '#1DB954', fontWeight: '600' }}>
                {showPassword ? 'Hide' : 'Show'}
              </Text>
            </TouchableOpacity>
          </View>
          <TouchableOpacity style={styles.button} onPress={handleAuth}>
            <Text style={styles.buttonText}>{isSignup ? 'Sign Up' : 'Login'}</Text>
          </TouchableOpacity>
          <TouchableOpacity onPress={() => setIsSignup(!isSignup)}>
            <Text style={styles.toggleText}>
              {isSignup ? 'Have an account? Login' : "Don't have an account? Sign Up"}
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    );
  }

  return (
    <SafeAreaView style={{ flex: 1 }}>
      {/* Header with Hamburger */}
      <View style={styles.header}>
        <TouchableOpacity
          onPress={() => setMenuOpen((prev) => !prev)}
          style={styles.hamburgerButton}
        >
          <Text style={styles.hamburgerIcon}>☰</Text>
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Groove Tunes</Text>
      </View>

      {menuOpen && (
        <View style={styles.menu}>
          <TouchableOpacity onPress={handleLogout} style={styles.menuItem}>
            <Text style={styles.menuItemText}>Logout</Text>
          </TouchableOpacity>
        </View>
      )}

      <Text style={styles.title}>Select Your Mood</Text>
      <ScrollView
        horizontal
        contentContainerStyle={{ padding: 10 }}
        showsHorizontalScrollIndicator={false}
      >
        {moods.map((mood) => (
          <TouchableOpacity
            key={mood.title}
            style={[
              styles.moodContainer,
              selectedMood?.title === mood.title && styles.selectedMood,
            ]}
            onPress={() => handleSelectMood(mood)}
          >
            <Image source={{ uri: mood.image }} style={styles.moodImage} />
            <Text style={styles.moodText}>{mood.title}</Text>
          </TouchableOpacity>
        ))}
      </ScrollView>

      {selectedMood && (
        <>
          <Text style={styles.subtitle}>Tracks for {selectedMood.title}</Text>
          <ScrollView horizontal style={{ maxHeight: 160 }}>
            {(moodTracks[selectedMood.title] || []).map((track) => (
              <View key={track.title} style={styles.trackContainer}>
                <Text style={styles.trackTitle}>{track.title}</Text>
                <WebView
                  source={{ uri: track.embed }}
                  style={{ width: 250, height: 120 }}
                  allowsInlineMediaPlayback
                />
              </View>
            ))}
          </ScrollView>

          <View style={styles.chatContainer}>
            <Text style={styles.chatTitle}>Music AI Chatbot</Text>
            <ScrollView
              style={styles.chatMessages}
              contentContainerStyle={{ padding: 10 }}
            >
              {chatMessages.map((msg, i) => (
                <View
                  key={i}
                  style={[
                    styles.chatMessage,
                    msg.sender === 'user' ? styles.userMessage : styles.botMessage,
                  ]}
                >
                  <Text style={{ color: msg.sender === 'user' ? '#fff' : '#000' }}>
                    {msg.text}
                  </Text>
                </View>
              ))}
            </ScrollView>
            <View style={styles.chatInputContainer}>
              <TextInput
                style={styles.chatInput}
                placeholder="Say something..."
                value={chatInput}
                onChangeText={setChatInput}
                onSubmitEditing={handleSendChat}
                returnKeyType="send"
              />
              <TouchableOpacity style={styles.sendButton} onPress={handleSendChat}>
                <Text style={styles.sendButtonText}>Send</Text>
              </TouchableOpacity>
            </View>
          </View>
        </>
      )}
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  loginContainer: {
    flex: 1,
    backgroundColor: '#000', // Spotify-style black background
    justifyContent: 'center',
    paddingHorizontal: 20,
  },
  loginForm: {
    backgroundColor: '#111', // Dark inner card
    borderRadius: 10,
    padding: 20,
    elevation: 5,
  },
  appTitle: {
    fontSize: 36,
    fontWeight: 'bold',
    color: '#1DB954', // Spotify green
    textAlign: 'center',
    marginBottom: 30,
  },
  title: {
    fontSize: 24,
    fontWeight: '700',
    marginBottom: 15,
    color: '#fff',
    textAlign: 'center',
  },
  input: {
    borderColor: '#333',
    borderWidth: 1,
    borderRadius: 6,
    padding: 10,
    marginBottom: 15,
    fontSize: 16,
    color: '#fff',
    backgroundColor: '#222',
  },
  passwordContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 15,
  },
  showPasswordButton: {
    marginLeft: 10,
  },
  button: {
    backgroundColor: '#1DB954',
    paddingVertical: 12,
    borderRadius: 6,
    marginBottom: 15,
  },
  buttonText: {
    color: '#fff',
    fontWeight: '700',
    textAlign: 'center',
    fontSize: 18,
  },
  toggleText: {
    textAlign: 'center',
    color: '#1DB954',
    fontWeight: '600',
    marginTop: 5,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#1DB954',
    padding: 15,
  },
  hamburgerButton: {
    paddingRight: 20,
  },
  hamburgerIcon: {
    fontSize: 26,
    color: '#fff',
  },
  headerTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#fff',
  },
  menu: {
    position: 'absolute',
    top: 60,
    left: 10, // now on the left side
    backgroundColor: '#fff',
    borderRadius: 8,
    elevation: 8,
    zIndex: 999,
  },
  menuItem: {
    padding: 12,
  },
  menuItemText: {
    color: '#1DB954',
    fontWeight: '700',
    fontSize: 16,
  },
  moodContainer: {
    alignItems: 'center',
    marginRight: 15,
  },
  selectedMood: {
    borderColor: '#1DB954',
    borderWidth: 3,
    borderRadius: 10,
    padding: 3,
  },
  moodImage: {
    width: 80,
    height: 80,
    borderRadius: 10,
  },
  moodText: {
    marginTop: 5,
    fontWeight: '600',
  },
  subtitle: {
    fontSize: 20,
    fontWeight: '600',
    marginHorizontal: 10,
    marginVertical: 10,
  },
  trackContainer: {
    marginHorizontal: 10,
    marginBottom: 20,
  },
  trackTitle: {
    fontWeight: '700',
    marginBottom: 5,
  },
  chatContainer: {
    flex: 1,
    marginTop: 10,
    marginHorizontal: 10,
  },
  chatTitle: {
    fontSize: 20,
    fontWeight: '700',
    marginBottom: 10,
  },
  chatMessages: {
    flex: 1,
    borderWidth: 1,
    borderColor: '#ddd',
    borderRadius: 8,
    padding: 10,
    marginBottom: 10,
    maxHeight: 180,
  },
  chatMessage: {
    padding: 8,
    borderRadius: 8,
    marginBottom: 8,
  },
  userMessage: {
    backgroundColor: '#1DB954',
    alignSelf: 'flex-end',
  },
  botMessage: {
    backgroundColor: '#eee',
    alignSelf: 'flex-start',
  },
  chatInputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  chatInput: {
    flex: 1,
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 8,
    paddingHorizontal: 10,
    paddingVertical: 8,
    fontSize: 16,
  },
  sendButton: {
    backgroundColor: '#1DB954',
    marginLeft: 10,
    borderRadius: 8,
    paddingVertical: 10,
    paddingHorizontal: 15,
  },
  sendButtonText: {
    color: '#fff',
    fontWeight: '700',
  },
});

export default App;

